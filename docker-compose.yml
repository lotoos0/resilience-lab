services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: resilience
      POSTGRES_PASSWORD: resilience
      POSTGRES_DB: resilience_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U resilience"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
  api:
    build:
      context: .
      dockerfile: services/api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://resilience:resilience@postgres:5432/resilience_db
      REDIS_URL: redis://redis:6379
      PAYMENTS_URL: http://payments:8001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      payments:
        condition: service_started
  payments:
    build:
      context: .
      dockerfile: services/payments/Dockerfile
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://resilience:resilience@postgres:5432/resilience_db
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
volumes:
  pgdata:
  redisdata:
